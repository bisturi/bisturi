import sys
sys.path.append(".")

from bisturi.packet import Packet
from bisturi.field  import Int, Data, Ref


class Header(Packet):
    __bisturi__ = {'endianness': 'little'}
    magic = Int(4, default=0xa1b2c3d4)
    major = Int(2)
    minor = Int(2)

    thiszone = Int(4, signed=True)
    sigfigs = Int(4)

    spanlen = Int(4)
    network = Int(4, default=1)

    def is_swap_needed(self):
        return self.magic in (0xd4c3b2a1, 0x4d3cb2a1)

    def has_nsec_resolution(self):
        return self.magic in (0xa1b23c4d, 0x4d3cb2a1)

class Record(Packet):
    __bisturi__ = {'endianness': 'little'}
    ts_sec  = Int(4)
    ts_usec = Int(4)

    incl_len = Int(4)
    orig_len = Int(4)

    raw_packet = Data(incl_len)

class PcapFile(Packet):
    header  = Ref(Header, embeb=True)
    records = Ref(Record).repeated(until=lambda raw, offset, **k: len(raw) - offset <= 0)


if __name__ == '__main__':
    from base64 import b16decode

    # from arp-storm.pcap, https://wiki.wireshark.org/SampleCaptures
    raw_file = b16decode(brue)
    pcap_file = PcapFile.unpack(raw_file)

    import bisturi.util as _utils
    _utils.inspect(pcap_file)

